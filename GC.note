1.Serial收集器
	这个收集器是一个单线程的收集器，它在进行垃圾收集时，必须暂停其他所有的工作线程(称之为“stop the world”),知道收集结束。
	虽然它有"stop the world"的缺点，它依然是虚拟机运行在client模式下的默认新生代收集器，它的优点:简单而高效。在桌面应用中，停顿时间完全可以控制在几十毫秒最多一百毫秒以内，只要不频繁发生，这点停顿是可以接受的。
2.ParNew收集器
	其实是Serial收集器的多线程版本，除了使用多条线程进行垃圾收集之外，其余行为都与Serial收集器相同，比如用户线程也会暂停("stop the world").
它是许多运行在Server模式下的虚拟机中首选的新生代收集器，除了Serial收集器外，目前只有它能与CMS收集器配合工作。
3.Parallel Scavenge收集器
	也是一个新生代收集器，也是使用复制算法，并发的多线程收集器。
它的目标是达到一个可控制的吞吐量，所谓吞吐量就是cpu用于运行用户代码的时间与cpu总消耗时间的比值，即吞吐量=运行用户代码时间/(运行用户代码时间+垃圾收集时间)。
	它提供了两个参数用于精确控制吞吐量，分别是最大垃圾收集停顿时间及直接设置吞吐量大小的GCTimeRatio(它其实不是吞吐量，而是垃圾收集时间占总时间的比率，相当于吞吐量的倒数)。
	由于与吞吐量关系密切，Parallel scavenge收集器也经常被称为“吞吐量有限”收集器。除了上述两个参数外，它还提供了自适应调节策略开关UserAdaptiveSizePolicy,它能动态调整其他参数以提供最合适的停顿时间或最大吞吐量。
	自适应调节策略也是Parallel Scavenge收集器与ParNew收集器的一个重大区别。

4.Serial Old收集器
	它是Serial收集器的老年代版本，它同样是一个单线程收集器，使用“标记-整理”算法。
	
5.Parallel old收集器
	Parallel Old是Parallel scavenge收集器的老年代版本，使用多线程和"标记-整理"算法。
在注重吞吐量及CPU资源敏感的场合，都可以优先考虑Parallel Scavenge加Parallel Old收集器。

6.CMS(concurrent mark sweep)收集器
	CMS收集器是一种以获取最短回收停顿时间为目标的收集器。由名字“mark sweep”就可以知道它采用“标记-清除”算法，这会带来内存碎片问题。
	它比前面几种收集器复杂，整个过程分为4个步骤：
	1）初始标记(CMS initial mark)
		仅仅只是标记一下GC roots能直接关联到的对象，速度很快。
	2) 并发标记(CMS concurrent mark)
		就是进行GC roots tracing的过程，就是整个有向图的标记。
	3) 重新标记(CMS remark)
		重新标记是为了修正并发标记起见，因用户程序继续运行而导致标记产生变动的那一部分对象的标记记录。这个阶段的停顿时间一般会比初始标记阶段稍长一些，但远比并发标记的时间短。
	4) 并发清除(CMS concurrent sweep)

	初始标记和重新标记是"stop the world"的，而最耗时间的并发标记和并发清除过程，收集器线程与用户线程是同时工作的。所以总体上CMS收集器的内存回收过程是与用户线程一起工作的。
	CMS收集器三个缺点：
	1）对CPU资源非常敏感
		其实面向并发设计的程序都对CPU资源比较敏感
	2）CMS无法处理浮动垃圾
		即在并发清除过程用户线程还在运行，伴随程序的运行自然会有新的垃圾不断产生，这部分垃圾出现在标记之后，无法在本次收集中处理掉，只好留下次GC时处理。
	3）"标记-清除"算法产生的大量空间碎片。

7.G1(Garbage first)收集器
与CMS收集器比有两个显著改进：
	1）基于"标记-整理"算法，不会产生空间碎片。
	2）能非常准确低控制停顿时间，即能让使用者明确指定在长度M毫秒的时间片段内，消耗在垃圾收集上的时间不得超过N毫秒。
	之前的收集器手机端范围都是在新生代和老年代上的。而G1将整个Java堆划分为多个大小固定的独立区域，并且跟踪这些区域里面的垃圾堆积程序，在后台维护一个优先列表，每次根据允许的收集时间，优先回收垃圾最多的的区域。

对于以上的并行(Parallel)和并行(concurrent)收集器的区别：
	1）并行(Parallel)：指多条垃圾收集器线程并行工作，但此时用户线程仍然处于等待状态。
	2）并行(concurrent)：指用户线程与垃圾收集器线程同时执行(但不一定是并行，可能会交替执行)，用户程序继续运行，而垃圾收集器程序运行于另一个CPU上。


总结
1）Serial Old收集器是Serial收集器的老年代版本。
2）Parallel Old是Parallel scavenge收集器的老年代版本。
3）Serial收集器，ParNew收集器,Parallel scavenge收集器都是新生代收集器，采用复制算法。
4）Serial Old收集器，Parallel Old都是老年代收集器，
5）
6)CMS收集器采用“标记-清除”算法，有碎片，G1采用“标记-整理”算法，不会产生碎片。
