private  transient DecimalFormat df= new DecimalFormat("#,###")
改为下面其实更合适:
private  static final DecimalFormat df= new DecimalFormat("#,###")








Bean


transi



JSONObject



### 钱包按钮优化(“我的”中的“石头钱包”详情页的“定期标banner”)
1. ios: 如果只加"去理财", 1小时, 如果全部调整, 1天.
1. Android: 如果只加"去理财", 半小时, 如果全部调整, 1天.


### 阶梯加息
1. iOS: 2天
1. Android: 2天.


### 开售提醒
由于开售提醒目前的需求说明有一些地方还是不确定的, 所以开发这边很难给出一个精确的时间,下面是我给的大致的一个时间.

#### iOS
1. 方案1,利用系统闹钟:2到3天(假设详情页不做任何变化)
1. 方案2,App自己实现,3天. 局限:App被杀死后闹钟不会提醒.


#### Android
Android需要自己实现闹钟功能.

有以下两个局限:
1. App如果是用户正常退出, 闹钟还是会提醒的,但是,如果是被用户通过工具(比如进设置)强制退出或者因为手机资源紧张而被系统强行结束, 则闹钟不提醒.
我们可以通过保活手段让App尽量长久存在,但是一般的App没必要这么做,只有系统类工具类的App才会这么做.
1. 手机重启后, 我们要在用户没手工开启App情况下就要开始计时, 这个需要一个自启动的权限, 需要用户授权,如果被拒, 则无法在这种情况下计时.

如果不做保活工作(我觉得也没必要),我们大致完成需要3天时间.



开售提醒





ll_reward_money


        fragmentPaySuccessHeaderBinding= DataBindingUtil.inflate(inflater, R.layout.fragment_pay_success_header,  mXListView,false);


BehaviorSubject.onnext(4)        



BehaviorSubject<Object> subject = BehaviorSubject.create("default");
subject.subscribe(xxxxxxxxxlx1);
subject.onnext("x1");



subject.onnext("sdfs");

subject.subscribe(xxxxxxxxxlx2);
subject.onnext("yh");

BehaviorSubject<Object> subject = BehaviorSubject.create(obj1);

subject.onnext(obj2);


subject.subscribe(xxxxxxxxxlx2);






","toWalletRedenvelope":"0.64","toWallet":1,"redenvelopes":[{"title":"奖励【投资加息标】","amount":"1.33"}]},"errorType":null,"errorMsg":"正常","success":true}
11-18 09:19:52.471 20891-20891/cn.stlc.app.test D/Async: X-LOG     result:1115321047



px = dp * (dpi / 160)

dp = 160*px/dpi
支持多种屏幕



selector shape
